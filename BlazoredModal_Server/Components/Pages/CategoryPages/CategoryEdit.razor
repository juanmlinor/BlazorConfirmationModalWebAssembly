@page "/categories/edit/{Id:int}"
@using BlazoredModal_Server.Models

<h3>Editar Categoría</h3>

@if(category is null)
{
    <Loading/>
}
else
{
    <FormWithName @ref="categoryForm" Label="Categoría: " Model="category" OnValidSubmit="EditAsync" ReturnAction="Return" />
}
@code {
    private Category? category;
    private FormWithName<Category>? categoryForm;

    //[Inject] private IRepository Repository { get; set; } = null!;
    [Inject] private SweetAlertService SweetAlertService { get; set; } = null!;
    [Inject] private NavigationManager NavigationManager { get; set; } = null!;
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = default!;

    [EditorRequired, Parameter] public int Id { get; set; }

    // protected override async Task OnParametersSetAsync()
    // {
    //     var responseHttp = await Repository.GetAsync<Category>($"/api/categories/{Id}");
    //     if (responseHttp.Error)
    //     {
    //         if (responseHttp.HttpResponseMessage.StatusCode == HttpStatusCode.NotFound)
    //         {
    //             NavigationManager.NavigateTo("/categories");
    //         }
    //         else
    //         {
    //             var messsage = await responseHttp.GetErrorMessageAsync();
    //             await SweetAlertService.FireAsync("Error", messsage, SweetAlertIcon.Error);
    //         }
    //     }
    //     else
    //     {
    //         category = responseHttp.Response;
    //     }
    // }

    private async Task EditAsync()
    {
        // var responseHttp = await Repository.PutAsync("/api/categories", category);
        // if (responseHttp.Error)
        // {
        //     var message = await responseHttp.GetErrorMessageAsync();
        //     await SweetAlertService.FireAsync("Error", message);
        //     return;
        // }

        await BlazoredModal.CloseAsync(ModalResult.Ok());
        Return();

        var toast = SweetAlertService.Mixin(new SweetAlertOptions
            {
                Toast = true,
                Position = SweetAlertPosition.BottomEnd,
                ShowConfirmButton = true,
                Timer = 3000
            });
        await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Cambios guardados con éxito.");
    }

    private void Return()
    {
        categoryForm!.FormPostedSuccessfully = true;
        NavigationManager.NavigateTo("/categories");
    }
}

